Para evaluar el correcto funcionamiento de la tecnica desarrollada se ha analizado primero su funcionamiento utilizando 3 set de datos de prueba. Esto son 3 trackfiles guardados en simulaciones montecarlo. 

El procedimiento para la evaluacion consiste en aplicar la metodologia desarrollada utilizando distintos inputs de configuracion, variando la cantidad de macro y micro grupos para analizar que efecto tiene en obtener una mejor aproximacion de la distribucion de las variables en el espacio de fases y una correcta aproximacion de la correlacion entre las variables. 

Los inputs que se van a variar va a ser:
    El orden de las variables: por ejemplo tomar el orden [letargia, x, y, mu, phi], como asi tambien [x, y, letargia, mu, phi]. (tal vez use otro. Por ahora estoy escribiendo un poco para tener en claro que voy a hacer, y luego lo hago.). Este es un parametro relevante debido a que a medida que avanzamos en las variables a procesar el conjunto de datos original se va fragmentando mas y mas. Esto provoca que la mayor estadistica se obtenga para la primer variable y es de esperar que se obtenga la mejor aproximacion. Por lo tanto cada varaible subsiguiente va a tener menos cuentas y por lo tanto peor estadistica. A su vez no es trivial la variable que quede al ultimo. Debido a que la variable phi suele ser bastante uniforme en problemas con simetria se ha decidido dejarla ultima en este analisis.
    La cantidad de macrogrupos: por ejemplo se va a analizar el efecto de utilizar una mayor o menor cantidad de macrogrupos ([8,8,8,8] o [6,6,6,6]), como asi tambien utilizar esquemas crecientes o decrecientes ([9,8,7,6] o [6,7,8,9]). Una de las cosas que esperamos discutir es como afecta la seleccion del los macrogrupos a la hora de poder fragmentar el conjunto de datos en diversos subconjuntos para obtener una correcta aproximacion de la correlacion pero sin trabajar con subconjuntos de particulas excesivamente pequeños que provoquen que haya mucho ruido estadistico que se vaya a reproducir a la salida del resmapleo.
    La cantidad de microgrupos: similar al caso anterior se va a analizar la factibilidad de utilizar mas o menos microgrupos, como asi tambien utilizar esquemas crecientes o decrecientes. En este caso lo que se busca corroborar no es el efecto en la aproximacion de la correlacion, sino el efecto que la eleccion de este parametro tiene a la hora de estimar la distribucion de las variables, intendando no reproducir el ruido estadistico de la muestra. Para esto es fundamental el uso de bineado adaptativo para poder asignarle mejor densidad de bines a donde haya mayor estadistica.

Una vez elegido el conjunto de inputs con el que se va a procesar un trackfile lo que prosigue es obtener la distribucion de las variables que se generarian con ese histograma multidimensional. A su vez tambien se obtiene que correlaciones se generarian. Una vez obtenido la distribucion y la correlacion que son vectores y matrices 2x2 lo que se hace es obtener las discretizaciones equivalentes del conjunto de datos original. Con esto luego es posible para el caso de las distribuciones realizar un grafico con el ploteo de ambas distribuciones y su error relativo. A su vez para el caso de las distribuciones lo que se ha elegido es graficar el error relativo entre las dos matrices utilizando un mapa de color. En base a esto es posible analizar visualmente la factibilidad de la herramienta a la hora de realizar una correcta aproximacion del conjunto de datos. 

A su vez, tambien es posible utilizar una metrica numerica basanda en la divergencia KL. Esta es una tecnica que nos permite estimar la distancia entre dos arreglos de datos. Utilizando este esquema podemos Cuantificar las distintas aproximaciones obtenidas con distintos conjuntos de inputs. 

A su vez, para el primer trackfile que analizamos se va a agregar una subseccion para mostrar el efecto de utilizar el bineado adaptativo tanto en los macrogrupos y en los microgrupos. 

-----------------------------------------------
Aca voy a poner los resultados del primer trackfile
-----------------------------------------------

Introduccion del trackfile. Descripcion del mismo:
Este trackfile se me ha sumistrado externamente. El mismo parece ser los neutrones registrados en un tubo de vacio que esta rodeado por agua. El mismo cuenta con solo con los neutrones que viajan por dentro de la seccion, lo cual se puede ver en un grafico xy donde se observa una distribucion uniforme en un cuadrado que representa la seccion del tubo. A su vez, en este conjunto hay 2 tipos de neutrones. Lo que no han colisionado poseen un mu exactamente igual a 1, y una letargia minima. Los mismos no poseen ningun tipo de dispersion en su valor, sino que son exactamente mu = 1 y letargia = minima. Esto indica que provienen de una simulacion donde la fuente se ha configurado con esos parametros. El otro subconjunto de neutrones que hay en la lista son los correspondientes a los que han colisionado. Estos poseen una distribucion de mu y letargia mucho mas dispersa en el conjunto de posibles valores.

-----------------------------------------------
equal equal - config 2
-----------------------------------------------

Entonces lo que se ha decidido ha sido emplear primero un bineado sencillo. Se ha utilizado micro grupos y macrogrupos de ancho de bin uniforme. Se ha decidido para ambos casos utilizar un esquema de bineado uniforme para ambos casos, tomando 100 bines para los microgrupos y 8 bines para los macrogrupos. A su vez se ha decidido tomar el orden letargia, x, y, mu, phi. (poner el input como en el codigo) (CONFIG 2)

Lo que obtengo para letargia es una distribucion que esta completamente gobernada por el ancho de los microbins elegido. La delta de valores en mu y en letargia que habia en 0 y minimo respectavimente se ha perdido y se ha remplazado por un rectangulo de ancho igual al ancho del bin. 
Tambien vemos que en x se suaviza locamente la distribucion, pero sigue reproduciendo el ruido estadistico en forma macro de la distribucion original. Esto se debe a utilizar muchos microbines y de ancho uniforme. Como se se suaviza solo en el intervalo del bin.

A su vez (esto deberia estar introducido previamente. a la hora de hablar del tracfile que estamos usando. En el plot de letargia vs mu se observa un distribucion montada sobre otra de forma muy clara. Esto es un ejemplo muy visual de la correlacion entre las particulas.) se observa que el grafico de letargia vs mu se obtiene algo resampleado completamente distinto al original. Se observa efectos raros producidos por la discretizacion macro utilizada.
output kl:
KL 1D[ln(E0/E)] = 1.2229e+00 nats
KL 1D[x] = 1.0918e-03 nats
KL 1D[y] = 1.0679e-03 nats
KL 1D[mu] = 1.1957e+00 nats
KL 1D[phi] = 1.4702e+00 nats
KL 2D[ln(E0/E),x] = 1.6981e+00 nats
KL 2D[ln(E0/E),y] = 1.7038e+00 nats
KL 2D[ln(E0/E),mu] = 3.8917e+00 nats
KL 2D[ln(E0/E),phi] = 3.6191e+00 nats
KL 2D[x,y] = 1.1812e+00 nats
KL 2D[x,mu] = 2.0564e+00 nats
KL 2D[x,phi] = 2.4558e+00 nats
KL 2D[y,mu] = 2.0566e+00 nats
KL 2D[y,phi] = 2.4674e+00 nats
KL 2D[mu,phi] = 3.9723e+00 nats
--------------------------------------------------
Σ KL 1-D = 3.8909e+00  |  Σ KL 2-D = 2.5102e+01
KL total  = 2.8993e+01 nats (1D + 2D)

-----------------------------------------------
adaptive - adaptive - config 3
-----------------------------------------------

Ahora lo que se hizo fue cambiar el bineado micro y macro por adaptive. Esto permite optimizar la ubicacion de los bordes de macro y micro grupos.

Viendo los plots de la generacion vemos que en letargia se logra aproximar de mejor manera el comportamiento de delta. Sin embargo se ve cierto comportamiento extraño hacia letargias altas. en mu sucede algo similar
En x se ve que se empeora el resultado. El algoritmo tiene tnatos bines de sobra que busca reducir el ruido un monton. Esto provoca que se copie muy bien el ruido, sacandole los pelos...
Pasando al os 2d se ve que el corportamiento es mejor que el bines uniforme pero bueno, sigue con ciertos probelmas debido a la discretizacion. Sin embargo para misma cantidad de discretizaciones el adaptive logra obtener una mejor aproximacion. 
Output KL:
KL 1D[ln(E0/E)] = 1.1210e-03 nats
KL 1D[x] = 8.8676e-04 nats
KL 1D[y] = 9.3455e-04 nats
KL 1D[mu] = 1.0059e-03 nats
KL 1D[phi] = 6.5935e-04 nats
KL 2D[ln(E0/E),x] = 4.7405e-01 nats
KL 2D[ln(E0/E),y] = 4.7921e-01 nats
KL 2D[ln(E0/E),mu] = 8.2943e-01 nats
KL 2D[ln(E0/E),phi] = 4.6723e-01 nats
KL 2D[x,y] = 1.1792e+00 nats
KL 2D[x,mu] = 8.5950e-01 nats
KL 2D[x,phi] = 9.8025e-01 nats
KL 2D[y,mu] = 8.6444e-01 nats
KL 2D[y,phi] = 9.8515e-01 nats
KL 2D[mu,phi] = 8.2509e-01 nats
--------------------------------------------------
Σ KL 1-D = 4.6075e-03  |  Σ KL 2-D = 7.9435e+00
KL total  = 7.9481e+00 nats (1D + 2D) (aca podes ir usando esto para hacer una tabla comparativa. ademas de comentarme si reconoces algun patron o señal de lo que digo en el texto reflejado en los datos numericos.

-----------------------------------------------
macro adaptive micro equal - config 4
-----------------------------------------------

Luego probe con solo usar macrobinning adaptive y usar microbinning equal bins. La mejora en los graficos 2d se observa. Sin embargo la mejora en el grafico 1D no. Esto se observa debido al gran error que aparece donde haya distribuciones bruscas. El problema del detalle con microbinning equal permanece.
outputKL: 
KL 1D[ln(E0/E)] = 1.8271e-01 nats
KL 1D[x] = 1.0744e-03 nats
KL 1D[y] = 1.0617e-03 nats
KL 1D[mu] = 1.1858e-03 nats
KL 1D[phi] = 9.0072e-01 nats
KL 2D[ln(E0/E),x] = 6.5831e-01 nats
KL 2D[ln(E0/E),y] = 6.6069e-01 nats
KL 2D[ln(E0/E),mu] = 1.0445e+00 nats
KL 2D[ln(E0/E),phi] = 1.6429e+00 nats
KL 2D[x,y] = 1.1806e+00 nats
KL 2D[x,mu] = 8.6557e-01 nats
KL 2D[x,phi] = 1.9531e+00 nats
KL 2D[y,mu] = 8.5821e-01 nats
KL 2D[y,phi] = 1.9088e+00 nats
KL 2D[mu,phi] = 1.7869e+00 nats
--------------------------------------------------
Σ KL 1-D = 1.0867e+00  |  Σ KL 2-D = 1.2560e+01
KL total  = 1.3646e+01 nats (1D + 2D)

-----------------------------------------------
macro equal micro adaptive - config 5
-----------------------------------------------

Y por ultimo por ahora voy a realizar el macrobinning equal y el microbinning adaptive.

-----------------------------------------------
adaptive - adaptive - config 6 tocando bines micro
-----------------------------------------------
Ahora lo que voy a probar es reducir la cantidad de bines micro. Para letargia y mu pasar a 80. Para x e y pasar a 40. Para phi pasar a 30.

KL 1D[ln(E0/E)] = 1.1926e-03 nats
KL 1D[x] = 1.0427e-03 nats
KL 1D[y] = 1.0728e-03 nats
KL 1D[mu] = 1.1507e-03 nats
KL 1D[phi] = 1.4936e-03 nats
KL 2D[ln(E0/E),x] = 4.7902e-01 nats
KL 2D[ln(E0/E),y] = 4.8365e-01 nats
KL 2D[ln(E0/E),mu] = 8.3241e-01 nats
KL 2D[ln(E0/E),phi] = 4.7456e-01 nats
KL 2D[x,y] = 1.1795e+00 nats
KL 2D[x,mu] = 8.6222e-01 nats
KL 2D[x,phi] = 9.8899e-01 nats
KL 2D[y,mu] = 8.6314e-01 nats
KL 2D[y,phi] = 9.9067e-01 nats
KL 2D[mu,phi] = 8.4650e-01 nats
--------------------------------------------------
Σ KL 1-D = 5.9523e-03  |  Σ KL 2-D = 8.0006e+00
KL total  = 8.0066e+00 nats (1D + 2D)

-----------------------------------------------
adaptive - adaptive - config 7 tocando bines macro y micro
-----------------------------------------------
hs.configure_binning(
    variable_order=["ln(E0/E)", "x", "y", "mu", "phi"],
    micro_bins=[80,8,8,80,30],
    # micro_bins=[100] * 5,
    macro_bins=[7, 5, 5, 6],
    micro_binning="adaptive",
    macro_binning="adaptive",
)

Lo que estuve viendo es que si quiero reducir el ruido macroscopico en x y debo utilizar pocos microgrupos... ahora voy a probar con un poco menos.

-----------------------------------------------
adaptive - adaptive - config 8 tocando bines macro y micro
-----------------------------------------------
En generla vi que debia usar menos macrogrupos para evitar trabajar con subconjuntos con muy poca estadistica.  Ademas me sirvio darle aprox 7 veces mas microbins a letargia y mu porque tienen cambios mucho mas brucos que x y y phi.
Con estos parametros se obtuvo una fuente que suaviza el ruido de forma macroscopica. Con esto me refiero a que sigue teniendo cierto ruido pero llena los huecos. ADemas se observa que los cambios brucos se captan bastante bien. Con estos parametros que estamos trabajando tenemos que la delta perfecta la reemplaza por un escalon de ancho 0.002, menor al 1%.

Bueno CONFIG 9 es una reversion de config 8 cambiando algunas cositas. Es basicamente lo mismo.



----------------------------------------------------------------------------------------------
Sin embargo a partir de aca voy a trabajar con el trackfile 2 (5/5/25). 
----------------------------------------------------------------------------------------------
Este es un trackfile guardado en el paralelepipedo a 30cm. Lo que tiene es que tiene los neutrones que viajan por el agua y por el vacio. Y los neutrones del van por el vacio son realmente la mayoria. para solucionar eso usamos un weight windows y obtuvimos mas particulas en el agua pero con menor peso. La idea es que aca van a haber mas cambios abruptos, que antes solventaba usando el macro edges. La idea aca es mostrar el efecto de usar bines uniformes. Eso anda mal y bueno usamos los misma integral. tiene el problema que no obtenemos los cambios bruscos. Entonces los agregue a mano. ahi obtuve algo.

Luego lo que hice fue usar adaptive y bueno hay que ver como da.

-----------------------------------------------
config 1 
-----------------------------------------------
[DEBUG] Binning configurado → {'order': ['ln(E0/E)', 'x', 'y', 'mu', 'phi'], 'micro': [50, 50, 50, 50, 50], 'macro': [5, 5, 5, 5], 'micro_initial_bins': [None, None, None, None, None], 'macro_initial_bins': [None, None, None, None], 'micro_binning': 'adaptive', 'macro_binning': 'adaptive', 'user': [None, None, None, None, None]}

Puse unos valores medios de parametros para tantear. 

letargia 
Sigue bastante bien la delta. LA zona de pasto que no habia mucha estadistica logra suavizarlo masomenos bien. Hay mucho detalle en la zona termica. Creo que hay exceso de microbines.

mu
Lo sigue muy bien. Copia demasiado el ruido estadistico. Exceso de microbines.

x e y
Exceso de microbines. Capta bien el corte abrupto.

-----------------------------------------------
config 2 
-----------------------------------------------
Ahora voy a probar obtener una mejor representacion utilizando menos micros bines.

-----------------------------------------------
config 3 
-----------------------------------------------
En este caso trabajo con pocos microbines pero aumente la cantidad de macrogupos. Quiero ver de obtener algo mas lindo en los plots 2D. El problema es que la estadistica cae en el vacio, por lo que cuesta obtener una estadistica convergida en los plots 2D.

